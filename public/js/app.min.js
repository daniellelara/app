function InterceptorConfig(e){e.interceptors.push("AuthInterceptor")}function Router(e,r){e.state("home",{url:"/",templateUrl:"partials/home.ejs"}).state("login",{url:"/login",templateUrl:"partials/login.ejs"}).state("register",{url:"/register",templateUrl:"partials/register.ejs"}).state("profile",{url:"/profile",templateUrl:"partials/profile.ejs"}).state("edit",{url:"/edit",templateUrl:"partials/edit.ejs"}).state("friends",{url:"/friends",templateUrl:"partials/friends.ejs"}),r.otherwise("/login")}function UsersController(e,r,t,n,o,s,i,u,l){function a(e){var t=e.token?e.token:null;t&&(c.getUsers(),c.currentUser=r.getUser(),c.currentRole=s.getRole()),c.getUser(),i.go("home"),c.message=e.message}var c=this;return c.all=[],c.currentUser=r.getUser(),c.currentRole=s.getRole(),c.user=null,c.login=function(){e.login(c.currentUser,a)},c.register=function(){e.register(c.currentUser,a),i.go("home")},c.logout=function(){r.removeToken(),s.removeRole(),c.all=[],c.currentUser=null,c.user=null,i.go("login")},c.getUsers=function(){c.all=e.query(),c.getUser()},c.alreadyConnected=function(e){if(c.user){for(var r=c.user.friends,t=e.username,n=0;n<r.length;n++)return r[n].username===t;return!1}},c.addConnection=function(r){e.connect({id:c.currentUser._id},{friends:r}),c.getUsers(),c.getUser()},c.deleteConnection=function(e){u.patch(n+"/users/"+c.currentUser._id+"/disconnect",{friends:e}).then(function(e){c.getUser(),c.getUser()});var r=c.user.friends.indexOf(e);c.user.friends.splice(r,1)},c.getUser=function(){c.userData=e.get({id:c.currentUser._id}),c.userData.$promise.then(function(e){l.$applyAsync(function(){c.user=e})})},c.editUser=function(e){t.upload({url:n+"/users/"+c.currentUser._id,data:e,method:"PUT"}).then(function(e){c.getUser(),i.go("profile")})},c.hasConnections=function(e){return e.length>0},c.showFriends=function(){var e=c.currentUser.role;return"admin"===e},c.showConnections=function(e){c.friends=e,i.go("friends")},c.isInCharge=function(e){return"super"===c.currentRole&&"admin"!==e},c.makeAdmin=function(r){var t={role:"admin"};e.update({id:r},t,function(){c.getUsers()})},c.isLoggedIn=function(){return!!r.getToken()},c.isLoggedIn()&&c.getUsers(),c}function User(e,r,t){var n=e(r+"/users/:id",{id:"@_id"},{update:{method:"PUT"},connect:{method:"PATCH"},login:{method:"POST",url:r+"/login"},register:{method:"POST",url:r+"/register"}});return Object.defineProperty(n.prototype,"imageSRC",{get:function(){return this.avatar?t+this.avatar:"../src/images/default.png"}}),n}function AuthInterceptor(e,r,t){return{request:function(t){var n=r.getToken();return t.url.match(e)&&n&&(t.headers.Authorization="Bearer "+n),t},response:function(n){return n.config.url.match(e)&&n.data.token&&(r.saveToken(n.data.token),t.saveRole(n.data.user.role)),n}}}function roleService(e,r){var t=this;t.saveRole=function(r){e.localStorage.setItem("role",r)},t.getRole=function(){return e.localStorage.getItem("role")},t.removeRole=function(){return e.localStorage.removeItem("role")}}function TokenService(e,r){var t=this;t.saveToken=function(r){e.localStorage.setItem("token",r)},t.getToken=function(){return e.localStorage.getItem("token")},t.removeToken=function(){return e.localStorage.removeItem("token")},t.getUser=function(){var e=t.getToken();return e?r.decodeToken(e):null}}angular.module("user-app",["ngResource","angular-jwt","ui.router","ngFileUpload"]).constant("API","http://localhost:3000/api").constant("S3","https://s3-eu-west-1.amazonaws.com/wdi-london18/").config(InterceptorConfig).config(Router),InterceptorConfig.$inject=["$httpProvider"],Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("user-app").controller("usersController",UsersController),UsersController.$inject=["User","tokenService","Upload","API","S3","roleService","$state","$http","$scope"],angular.module("user-app").factory("User",User),User.$inject=["$resource","API","S3"],angular.module("user-app").factory("AuthInterceptor",AuthInterceptor),AuthInterceptor.$inject=["API","tokenService","roleService"],angular.module("user-app").service("roleService",roleService),roleService.$inject=["$window","jwtHelper"],angular.module("user-app").service("tokenService",TokenService),TokenService.$inject=["$window","jwtHelper"];